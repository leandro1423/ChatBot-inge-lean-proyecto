# menu.py
import pandas as pd
import matplotlib.pyplot as plt
from adapters.sql_lite_user_repository import SQLiteUserRepository



# ----- MEN√ö DE OPCIONES -----

menu_opciones = [
    "1. Ver nuestros servicios",
    "2. Solicitar una cotizaci√≥n",
    "3. ¬øD√≥nde operamos?",
    "4. Consultar estado de mi proyecto",
    "5. Agendar una reuni√≥n con un asesor",
    "6. Contactar con un asesor urgente",
    "7. preguntas frecuentes",
    "8. Hablar directamente con un asesor humano",
    "9. Ver ubicaci√≥n o sedes",
    "10. te enviamos un correo con toda la informacion"
    "11. Otro"

]


def obtener_menu():
    mensaje = "¬°Hola! ¬øEn qu√© puedo ayudarte hoy? Estas son algunas cosas que puedo hacer:\n"
    mensaje += "\n".join(menu_opciones)
    return mensaje


def ejecutar_opcion(opcion):
    opciones_funciones = {
        "1": ver_servicios,
        "2": solicitar_cotizacion,
        "3": donde_operamos,
        "4": consultar_estado,
        "5": agendar_reunion,
        "6": solicitar_soporte,
        "7": hablar_virtual,
        "8": hablar_humano,
        "9": ver_ubicacion,
        "10": enviar_correo,
        "11": otro
    }

    funcion = opciones_funciones.get(opcion)
    if funcion:
        return funcion()
    else:
        return "‚ùå Opci√≥n no v√°lida. Por favor, selecciona una opci√≥n del 1 al 10."


# ---------- FUNCIONES DE COTIZACI√ìN ----------

def cargar_datos_cotizacion(ruta_archivo):
    return pd.read_excel(ruta_archivo)


def calcular_cotizacion(servicio, datos_df):
    resultado = datos_df[datos_df["servicio"].str.lower() == servicio.lower()]
    if not resultado.empty:
        precio = resultado.iloc[0]["Precio"]
        return f"üíº El valor estimado para el servicio '{servicio}' es: ${precio:,.0f} COP."
    else:
        return f"‚ö†Ô∏è No encontramos una cotizaci√≥n para el servicio '{servicio}'."


def solicitar_cotizacion():
    ruta_archivo = "C:/Users/cesii/OneDrive/Documentos/talento tech/Hackaton/datasets/servicios_ingelean.xlsx"

    try:
        datos = cargar_datos_cotizacion(ruta_archivo)
        lista_servicios = datos["servicio"].dropna().unique()  # Evita nulos y duplicados

        mensaje = "üìã Estos son los servicios disponibles para cotizar:\n"
        for idx, servicio in enumerate(lista_servicios, 1):
            mensaje += f"{idx}. {servicio}\n"
        mensaje += "\n‚úèÔ∏è Por favor, responde con el n√∫mero del servicio para conocer su valor."
        return mensaje

    except FileNotFoundError:
        return "‚ö†Ô∏è Error: No se encontr√≥ el archivo de cotizaciones. Verifica la ruta."
    except Exception as e:
        return f"‚ö†Ô∏è Ocurri√≥ un error inesperado: {e}"


def obtener_precio_por_indice(indice_usuario, datos_df):
    try:
        servicios = datos_df["servicio"].dropna().unique()
        indice = int(indice_usuario) - 1

        if 0 <= indice < len(servicios):
            servicio = servicios[indice]
            precio = datos_df[datos_df["servicio"] == servicio].iloc[0]["Precio"]
            return f"üí∞ El servicio de desarrollo de '{servicio}' vale ${precio:,.0f} COP."
        else:
            return "‚ùå √çndice fuera de rango. Por favor, selecciona un n√∫mero v√°lido."

    except ValueError:
        return "‚ö†Ô∏è Por favor ingresa un n√∫mero v√°lido."
    except Exception as e:
        return f"‚ö†Ô∏è Ocurri√≥ un error: {e}"


# ---------- FUNCIONES DE OPCIONES DEL MEN√ö ----------

def ver_servicios():
    return (
        "Nuestros servicios incluyen:\n"
        "- P√°gina Web\n"
        "- Tienda Virtual\n"
        "- App M√≥vil\n"
        "- Automatizaci√≥n de procesos\n"
        "- Software a medida\n"
    )


def donde_operamos():
    return "üåç Operamos en todo Colombia y partes de Latinoam√©rica."


def consultar_estado():
    return "üîç Por favor, proporciona tu n√∫mero de proyecto para consultar el estado."


def agendar_reunion():
    return "üìÖ Puedes agendar una reuni√≥n en este enlace: [https://calendly.com/ivanzho97/asesoria-personalizada]"


def solicitar_soporte():
    return "üõ†Ô∏è Describe tu problema t√©cnico para poder ayudarte."


def hablar_virtual():
    return (
        "ü§ñ Estoy aqu√≠ para ayudarte. Estas son algunas preguntas frecuentes:\n\n"
        "üíº *¬øQu√© servicios ofrecen?*\n"
        "Desarrollo de software a medida, integraci√≥n de IA, automatizaci√≥n de procesos y an√°lisis de datos.\n\n"
        "üß† *¬øQu√© tecnolog√≠as utilizan?*\n"
        "Python, Java, JavaScript, TensorFlow, PyTorch, React, Node.js, entre otros.\n\n"
        "üí∞ *¬øC√≥mo puedo cotizar un servicio?*\n"
        "Selecciona la opci√≥n 2 del men√∫ para iniciar una cotizaci√≥n personalizada.\n\n"
        "üïí *¬øCu√°l es el tiempo de desarrollo promedio?*\n"
        "Depende del proyecto, pero los desarrollos van desde 2 semanas hasta varios meses.\n\n"
        "üåê *¬øTienen soluciones con inteligencia artificial?*\n"
        "S√≠, ofrecemos chatbots, visi√≥n por computador, procesamiento de lenguaje natural y m√°s.\n\n"
        "üìç *¬øD√≥nde est√°n ubicados?*\n"
        "Tenemos sedes en Bogot√°, Medell√≠n y Cali. Puedes ver la ubicaci√≥n exacta con la opci√≥n correspondiente del men√∫.\n\n"
        "Si tienes otra pregunta, ¬°escr√≠bela y te responder√© enseguida! üòä"
    )

def hablar_humano():
    return "üë§ En breve te conectaremos con un asesor humano."


def ver_ubicacion():
    return (
        "üìç *Nuestras sedes son:*\n\n"
        "üèôÔ∏è *Pereira*: [Ver ubicaci√≥n](https://maps.app.goo.gl/XQzktPC3AbxHjeYC8) ‚Äì Barrio La victoria.\n"
    )
def enviar_correo():
    return "<UNK> Correo enviado correctamente."


def otro():
    return "‚úçÔ∏è Por favor, describe con m√°s detalle tu solicitud."
